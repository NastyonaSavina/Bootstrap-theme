{"version":3,"sources":["Demo/UIElements/Basic/Button.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["BasicButton","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","React","createElement","OverlayTrigger","overlay","Tooltip","Button","UcFirst","text","outlineButtons","squareButtons","className","basicDropdownButton","button","title","DropdownButton","id","concat","Dropdown","Item","eventKey","splitDropdownButton","SplitButton","Divider","Aux","Row","Col","Card","ButtonToolbar","Component","MainCard","_Component","_this","_len","length","args","Array","_key","call","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","_this2","cardClass","this","alignRight","Toggle","Menu","as","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","_toConsumableArray","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","children","windowSize","string","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/17.0dbd2081.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Row,\n    Col,\n    Button,\n    OverlayTrigger,\n    Tooltip,\n    ButtonToolbar,\n    Dropdown,\n    DropdownButton,\n    SplitButton\n} from 'react-bootstrap';\n\nimport Aux from \"../../../hoc/_Aux\";\nimport Card from \"../../../App/components/MainCard\";\nimport UcFirst from \"../../../App/components/UcFirst\";\n\nclass BasicButton extends React.Component {\n    render() {\n        const buttonVariants = [\n            'primary',\n            'secondary',\n            'success',\n            'danger',\n            'warning',\n            'info',\n            'light',\n            'dark',\n        ];\n\n        const buttonOptions = [\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\n            {variant: 'secondary', icon:'feather icon-camera'},\n            {variant: 'success', icon:'feather icon-check-circle'},\n            {variant: 'danger', icon:'feather icon-slash'},\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\n            {variant: 'info', icon:'feather icon-info'}\n        ];\n\n        const basicButtons = buttonVariants.map((variant, idx) => (\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\n                <Button variant={variant}><UcFirst text={variant} /></Button>\n            </OverlayTrigger>\n        ));\n\n        const outlineButtons = buttonVariants.map((variant, idx) => (\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\n            </OverlayTrigger>\n        ));\n\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\n\n\n        const basicDropdownButton = buttonOptions.map(\n            button => {\n                const title = <UcFirst text={button.variant} />;\n                return (\n                <DropdownButton\n                    title={title}\n                    variant={button.variant}\n                    id={`dropdown-variants-${button.variant}`}\n                    key={button.variant}\n                >\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                </DropdownButton>\n            );\n        });\n\n        const splitDropdownButton = buttonOptions.map(\n            button => {\n                const title = <UcFirst text={button.variant} />;\n                return (\n                <SplitButton\n                    title={title}\n                    variant={button.variant}\n                    id={`dropdown-split-variants-${button.variant}`}\n                    key={button.variant}\n                    className=\"mr-2 mb-2\"\n                >\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                </SplitButton>\n            );\n        });\n\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card title=\"Default\">\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\n                            {basicButtons}\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\n                                <Button variant=\"link\">Link</Button>\n                            </OverlayTrigger>\n                        </Card>\n                        <Card title=\"Outline\">\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\n                            {outlineButtons}\n                        </Card>\n                        <Card title=\"Square Button\">\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\n                            {squareButtons}\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Card title=\"Basic Dropdown Button\">\n                            <ButtonToolbar>\n                                {basicDropdownButton}\n                            </ButtonToolbar>\n                        </Card>\n                        <Card title=\"Split Dropdown Button\">\n                            <ButtonToolbar>\n                                {splitDropdownButton}\n                            </ButtonToolbar>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default BasicButton;\n","import React, {Component} from 'react';\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\nimport windowSize from 'react-window-size';\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n    state = {\n        isOption: this.props.isOption,\n        fullCard: false,\n        collapseCard: false,\n        loadCard: false,\n        cardRemove: false\n    };\n\n    cardReloadHandler = () => {\n        this.setState({loadCard: true});\n        setInterval(() => {\n            this.setState({loadCard: false});\n        }, 3000);\n    };\n\n    cardRemoveHandler = () => {\n        this.setState({cardRemove: true});\n    };\n\n    render() {\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n        let card = '';\n        let cardClass = [];\n\n        if (this.state.isOption) {\n            cardHeaderRight = (\n                <div className=\"card-header-right\">\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                            <i className=\"feather icon-more-horizontal\"/>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\n                                <i className='feather icon-refresh-cw'/>\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\n                                <i className='feather icon-trash'/>\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            );\n        }\n\n        cardHeader = (\n            <Card.Header>\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\n                {cardHeaderRight}\n            </Card.Header>\n        );\n\n        if (this.state.fullCard) {\n            cardClass = [...cardClass, 'full-card'];\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\n        }\n\n        if (this.state.loadCard) {\n            cardClass = [...cardClass, 'card-load'];\n            loader = (\n                <div className=\"card-loader\">\n                    <i className=\"pct-loader1 anim-rotate\"/>\n                </div>\n            );\n        }\n\n        if (this.state.cardRemove) {\n            cardClass = [...cardClass, 'd-none'];\n        }\n\n        if (this.props.cardClass) {\n            cardClass = [...cardClass, this.props.cardClass];\n        }\n\n        card = (\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\n                {cardHeader}\n                <Collapse in={!this.state.collapseCard}>\n                    <div>\n                        <Card.Body>\n                            {this.props.children}\n                        </Card.Body>\n                    </div>\n                </Collapse>\n                {loader}\n            </Card>\n        );\n\n        return (\n            <Aux>\n                {card}\n            </Aux>\n        );\n    }\n}\n\nexport default windowSize(MainCard);\n","import React from 'react';\n\nclass UcFirst extends React.Component {\n    render() {\n        const string = this.props.text;\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}\n\nexport default UcFirst;"],"sourceRoot":""}