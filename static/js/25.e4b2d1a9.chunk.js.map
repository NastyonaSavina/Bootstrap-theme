{"version":3,"sources":["Demo/Maps/GoogleMap/index.js"],"names":["polygon","lat","lng","GoogleMap","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","_createClass","key","value","this","renderAutoComplete","prevProps","map","e","preventDefault","_this2","_this$props","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","_this3","React","createElement","Aux","Row","Col","xl","Card","Header","Title","as","Body","style","height","width","Map","centerAroundCurrentLocation","className","zoom","Marker","name","onClick","InfoWindow","onClose","visible","Form","onSubmit","InputGroup","Control","ref","type","placeholder","Append","Button","Object","assign","center","Polygon","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","Polyline","path","Component","GoogleApiWrapper","apiKey"],"mappings":"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","file":"static/js/25.e4b2d1a9.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\n\nimport Aux from \"../../../hoc/_Aux\";\n\nconst polygon = [\n    { lat: 21.2105052, lng: 72.8653491 },\n    { lat: 21.2206445, lng: 72.8704506 },\n    { lat: 21.2183091, lng: 72.8631228 }\n];\n\nclass GoogleMap extends React.Component {\n\n    state = {\n        activeMarker: {},\n        selectedPlace: {},\n        showingInfoWindow: false,\n        position: null\n    };\n\n    onMarkerClick = (props, marker) =>\n        this.setState({\n            activeMarker: marker,\n            selectedPlace: props,\n            showingInfoWindow: true\n        });\n\n    onInfoWindowClose = () =>\n        this.setState({\n            activeMarker: null,\n            showingInfoWindow: false\n        });\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow)\n            this.setState({\n                activeMarker: null,\n                showingInfoWindow: false\n            });\n    };\n\n    componentDidMount() {\n        this.renderAutoComplete();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps.map) this.renderAutoComplete();\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    }\n\n    renderAutoComplete() {\n        const { google, map } = this.props;\n\n        if (!google || !map) return;\n\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n        autocomplete.bindTo('bounds', map);\n\n        autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n\n            if (!place.geometry) return;\n\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\n            else {\n                map.setCenter(place.geometry.location);\n                map.setZoom(17);\n            }\n\n            this.setState({ position: place.geometry.location });\n        });\n    }\n\n\n    render() {\n        const { position } = this.state;\n\n        return (\n            <Aux>\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Basic</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        zoom={14}\n                                    />\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={13}>\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                        />\n\n                                        <Marker />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        onClick={this.onMapClicked}\n                                        zoom={12}>\n\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\n\n                                        <InfoWindow\n                                            marker={this.state.activeMarker}\n                                            onClose={this.onInfoWindowClose}\n                                            visible={this.state.showingInfoWindow}>\n                                            <div>\n                                                <h3>{this.state.selectedPlace.name}</h3>\n                                            </div>\n                                        </InfoWindow>\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form onSubmit={this.onSubmit}>\n                                    <InputGroup className=\"mb-3\">\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\n                                        <InputGroup.Append>\n                                            <Button type=\"submit\">Search</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Form>\n                                <div style={{height: '240px', width: '100%'}}>\n                                    <Map\n                                        className='map'\n                                        {...this.props}\n                                        center={position}\n                                        centerAroundCurrentLocation >\n                                        <Marker position={position} />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polygon\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            paths={[polygon]}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={2}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polyline\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            path={polygon}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={5}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\n})(GoogleMap);"],"sourceRoot":""}